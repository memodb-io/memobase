from datetime import datetime
from .utils import pack_merge_action_into_string
from ..env import CONFIG

ADD_KWARGS = {"prompt_id": "ja_merge_profile"}

MERGE_FACTS_PROMPT = """
あなたは、ユーザーのメモをメンテナンスする責務を負っています。
あなたの仕事は、新しい補足情報を現在のメモとどのように統合するか？を判断することです。
あなたは、新しい補足情報を直接追加すべきか？新しい情報で既存の情報を更新すべきか？、または統合を放棄すべきか？を判断する必要があります。
ユーザーは、メモのトピック/サブトピックを提供します。またトピックの説明や、特定の更新要件も提供する可能性があります。

あなたの出力アクションは以下の通りです:
1. 直接追加: 補足情報が新たな情報を提供する場合は、直接追加してください。現在のメモが空の場合、補足情報を直接追加してください。
2. メモの更新: 補足情報が現在のメモと矛盾する場合、または現在の情報をより適切に反映するために現在のメモを修正する必要がある場合は、メモを更新してください。
3. 統合の放棄: 補足情報に価値がない場合、情報が現在のメモで完全に網羅されている場合、または現在のメモのコンテンツ要件を満たさない場合は、統合を放棄してください。

## 思考
出力アクションを行う前に、以下について思考してください：
1. 補足情報がメモのトピック説明を満たしているか？
    1.1. 要件を満たしていない場合は、補足情報を修正してメモの要件を満たす内容にできるかどうかを判断し、修正した補足情報を処理してください
    1.2. 補足情報を修正できない場合は、統合を破棄してください。
3. 補足情報が現在のメモの要件を満たしている場合は、上記の説明に従って出力アクションを判断してください
4. メモの更新を選択した場合、現在のメモに簡略化または削除できる部分がないかも同時に検討してください。

追加事項:
1. 現在のメモが空の場合、思考ステップ1を行い、補足情報が要件を満たしていれば、直接追加してください。
2. 更新要件が空でない場合、ユーザーの更新要件を参照した上で、思考してください。

## 出力アクション
### 直接追加
```
- APPEND{tab}APPEND
```
直接追加を選択した場合、内容を繰り返さずに`APPEND`ワードを直接出力してください。
### メモの更新
```
- UPDATE{tab}[UPDATED_MEMO]
```
メモの更新を選択した場合、メモを更新して`[UPDATED_MEMO]`の中に書き直してください。
### 統合の放棄
```
- ABORT{tab}ABORT
```
統合の放棄を選択した場合、内容を繰り返さずに`ABORT`ワードを直接出力してください。

## 出力テンプレート
上記の指示に従って、以下のフォーマットで出力してください:

THOUGHT
---
ACTION

上記のうち:
- `THOUGHT` はあなたの思考プロセスです
- `ACTION` はあなたの出力アクションです
例:
```example
補足情報には、ユーザーの現在の学習目標が期末試験の準備であることが記載されており、現在のトピック説明はユーザーの学習目標を記録しているため、これは要件を満たしています。現在のトピック説明はユーザーの学習目標を記録しているため、これは要件を満たしています。同時に、現在のメモには中間試験の準備に関する記録もあり、これは中間試験が既に終了していることを示唆しています。したがって、補足情報を単純に追加するのではなく、現在のメモを更新する必要があります。
メモの他の部分は保持したまま、該当箇所のみを更新する必要があります。
---
- UPDATE{tab}...現在Duolingoで日本語を独学中、日本語能力試験2級合格を目指している[2025/05/05に言及]; 期末試験の準備中[2025/06/01に言及];
```

以下の指示に従ってください:
- 正しい出力形式を厳守してください。
- 最終的なメモは5文を超えないようにしてください。常に簡潔にまとめ、メモの要点を出力してください。
- 入力で言及されていない内容を捏造しないでください。
- 旧メモと新メモの両方の日時アノテーションを保持してください。（例: XXX[2025/05/05に言及、2022年に発生]）。
- 更新する場合は、最終メモが簡潔であり、冗長な情報を含んでいないことを確認してください（例: 「ユーザーは悲しい；ユーザーの気分は悲しい」==「ユーザーは悲しい」）。

以上が全ての内容です。では、作業を実行してください。
"""


def get_input(
    topic, subtopic, old_memo, new_memo, update_instruction=None, topic_description=None
):
    today = datetime.now().astimezone(CONFIG.timezone).strftime("%Y-%m-%d")
    return f"""今日は {today} です。
## メモの更新指示
{update_instruction or "[empty]"}
### メモのトピックの説明
{topic_description or "[empty]"}
## メモのトピック
{topic}, {subtopic}
## 現在のメモ
{old_memo or "[empty]"}
## 補足情報
{new_memo}
"""


def get_prompt() -> str:
    return MERGE_FACTS_PROMPT.format(
        tab=CONFIG.llm_tab_separator,
    )


def get_kwargs() -> dict:
    return ADD_KWARGS


if __name__ == "__main__":
    print(get_prompt())
