{
  "openapi": "3.1.0",
  "info": {
    "title": "MemoBase API",
    "summary": "APIs for MemoBase, a user memory system for LLM Apps",
    "version": "0.1.0.dev1"
  },
  "paths": {
    "/api/v1/healthcheck": {
      "get": {
        "tags": [
          "chore"
        ],
        "summary": "Healthcheck",
        "description": "Check if your memobase is set up correctly",
        "operationId": "healthcheck_api_v1_healthcheck_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/users": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Create User",
        "description": "Create a new user with additional data",
        "operationId": "create_user_api_v1_users_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserData"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IdResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/users/{user_id}": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Get User",
        "operationId": "get_user_api_v1_users__user_id__get",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDataResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "user"
        ],
        "summary": "Update User",
        "operationId": "update_user_api_v1_users__user_id__put",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "User Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserData"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IdResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "user"
        ],
        "summary": "Delete User",
        "operationId": "delete_user_api_v1_users__user_id__delete",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/users/profile/{user_id}": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Get User Profile",
        "description": "Get the real-time user profiles for long term memory",
        "operationId": "get_user_profile_api_v1_users_profile__user_id__get",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserProfileResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/blobs/insert/{user_id}": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Insert Blob",
        "operationId": "insert_blob_api_v1_blobs_insert__user_id__post",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "User Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BlobData"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IdResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/blobs/{user_id}/{blob_id}": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Get Blob",
        "operationId": "get_blob_api_v1_blobs__user_id___blob_id__get",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "User Id"
            }
          },
          {
            "name": "blob_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Blob Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BlobDataResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "user"
        ],
        "summary": "Delete Blob",
        "operationId": "delete_blob_api_v1_blobs__user_id___blob_id__delete",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "User Id"
            }
          },
          {
            "name": "blob_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Blob Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "BaseResponse": {
        "properties": {
          "data": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Data"
          },
          "errno": {
            "$ref": "#/components/schemas/CODE",
            "default": 0
          },
          "errmsg": {
            "type": "string",
            "title": "Errmsg",
            "default": ""
          }
        },
        "type": "object",
        "title": "BaseResponse"
      },
      "BlobData": {
        "properties": {
          "blob_type": {
            "$ref": "#/components/schemas/BlobType"
          },
          "blob_data": {
            "type": "object",
            "title": "Blob Data"
          },
          "fields": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Fields"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "blob_type",
          "blob_data"
        ],
        "title": "BlobData"
      },
      "BlobDataResponse": {
        "properties": {
          "data": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/BlobData"
              },
              {
                "type": "null"
              }
            ]
          },
          "errno": {
            "$ref": "#/components/schemas/CODE",
            "default": 0
          },
          "errmsg": {
            "type": "string",
            "title": "Errmsg",
            "default": ""
          }
        },
        "type": "object",
        "title": "BlobDataResponse"
      },
      "BlobType": {
        "type": "string",
        "enum": [
          "chat",
          "doc",
          "image",
          "code",
          "transcript"
        ],
        "title": "BlobType"
      },
      "CODE": {
        "type": "integer",
        "enum": [
          0,
          400,
          401,
          403,
          404,
          405,
          409,
          422,
          500,
          501,
          502,
          503,
          504
        ],
        "title": "CODE"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "IdData": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid4",
            "title": "Id"
          }
        },
        "type": "object",
        "required": [
          "id"
        ],
        "title": "IdData"
      },
      "IdResponse": {
        "properties": {
          "data": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/IdData"
              },
              {
                "type": "null"
              }
            ]
          },
          "errno": {
            "$ref": "#/components/schemas/CODE",
            "default": 0
          },
          "errmsg": {
            "type": "string",
            "title": "Errmsg",
            "default": ""
          }
        },
        "type": "object",
        "title": "IdResponse"
      },
      "ProfileData": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid4",
            "title": "Id"
          },
          "content": {
            "type": "string",
            "title": "Content"
          },
          "related_blobs": {
            "items": {
              "type": "string",
              "format": "uuid4"
            },
            "type": "array",
            "title": "Related Blobs"
          },
          "attributes": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Attributes"
          }
        },
        "type": "object",
        "required": [
          "id",
          "content",
          "related_blobs"
        ],
        "title": "ProfileData"
      },
      "UserData": {
        "properties": {
          "data": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Data"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          }
        },
        "type": "object",
        "title": "UserData"
      },
      "UserDataResponse": {
        "properties": {
          "data": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/UserData"
              },
              {
                "type": "null"
              }
            ]
          },
          "errno": {
            "$ref": "#/components/schemas/CODE",
            "default": 0
          },
          "errmsg": {
            "type": "string",
            "title": "Errmsg",
            "default": ""
          }
        },
        "type": "object",
        "title": "UserDataResponse"
      },
      "UserProfileResponse": {
        "properties": {
          "data": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/UserProfilesData"
              },
              {
                "type": "null"
              }
            ]
          },
          "errno": {
            "$ref": "#/components/schemas/CODE",
            "default": 0
          },
          "errmsg": {
            "type": "string",
            "title": "Errmsg",
            "default": ""
          }
        },
        "type": "object",
        "title": "UserProfileResponse"
      },
      "UserProfilesData": {
        "properties": {
          "profiles": {
            "items": {
              "$ref": "#/components/schemas/ProfileData"
            },
            "type": "array",
            "title": "Profiles"
          }
        },
        "type": "object",
        "required": [
          "profiles"
        ],
        "title": "UserProfilesData"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      }
    }
  }
}